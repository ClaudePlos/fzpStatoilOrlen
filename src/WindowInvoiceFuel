/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package pl.vendi.windows;

import au.com.bytecode.opencsv.CSVReader;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.awt.TextField;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.math.BigDecimal;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;
import pl.vendi.actionsNaprzod.dbNaprzod;
import pl.vendi.model.VetDokumentVO;

/**
 *
 * @author k.skowronski
 */
public class OknoFakturyPaliwo extends javax.swing.JFrame {
    
    private dbNaprzod     dbNap = dbNaprzod.getInstance();
    
    private Object[][] dokLst = null;
    
    final JPanel panel = new JPanel(new FlowLayout(SwingConstants.LEADING, 10, 10));

    /**
     * Creates new form OknoFakturyPaliwo
     */
    public OknoFakturyPaliwo() {
        initComponents();
        
        DateFormat dateFormat = new SimpleDateFormat("yyyy-MM");  
        Date date = new Date();  
        date.setTime(date.getTime()  - (1 * 24 * 60 * 60 * 1000) * 15);
        labMiesiac.setText( dateFormat.format( date ).toString() );
        
        
        List <Object[]> wykazSplek = dbNap.pobierzWykazSpolek();
        
        
        for ( Object[] w : wykazSplek )
        {
            cmbSpolki.addItem( w[2] );
        }
        
        
        
        // wycentrowanie okna
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaCSV = new javax.swing.JTable();
        labIloscWierszyCSV = new javax.swing.JLabel();
        cmbSpolki = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        labMiesiac = new javax.swing.JTextField();
        butWgraj = new javax.swing.JButton();
        cmbKontrahent = new javax.swing.JComboBox();
        butSprawdzenie = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("FakturaPaliwo v01");

        jButton1.setText("Otwórz plik CSV");
        jButton1.setActionCommand("");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        tabelaCSV.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        tabelaCSV.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabelaCSV);

        labIloscWierszyCSV.setText("Ilosc wierszy: 0");

        jLabel2.setText("Do której firmy wgrać?");

        jLabel3.setText("Podaj miesiąc zaksięgowania:");

        labMiesiac.setText("jTextField1");

        butWgraj.setText("Wgraj");
        butWgraj.setEnabled(false);
        butWgraj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butWgrajActionPerformed(evt);
            }
        });

        cmbKontrahent.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Statoil", "Orlen" }));

        butSprawdzenie.setText("Sprawdz Przed Wgraniem");
        butSprawdzenie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butSprawdzenieActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(labIloscWierszyCSV))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(cmbKontrahent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbSpolki, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labMiesiac, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(butSprawdzenie)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(butWgraj)))
                        .addGap(0, 315, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1)
                    .addComponent(labIloscWierszyCSV))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbSpolki, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(labMiesiac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(butWgraj)
                    .addComponent(cmbKontrahent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(butSprawdzenie))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         

        JFileChooser fc=new JFileChooser(".csv");
        
        // 01 - wskazuję plik zapisu
        if(fc.showOpenDialog(this)!=JFileChooser.APPROVE_OPTION)
        {
           return;
        }
        File file = fc.getSelectedFile();
        
        // 02 Przetwarzam plik
        try {
            CSVReader reader = new CSVReader(new FileReader( file ), ';'); 
            
            List myEntries = reader.readAll();
            
            
        dokLst = new Object[myEntries.size()][30];
        
        labIloscWierszyCSV.setText("Ilość wierszy: " + myEntries.size());
        
        for ( int i = 0; i < myEntries.size(); i++ )
        {
               Object NumerFaktury               =    ((Object[]) myEntries.get(i))[0];// 
               Object Prefix                     =    ((Object[]) myEntries.get(i))[1]; //
               Object NrKlienta                  =    ((Object[]) myEntries.get(i))[2]; //
               Object NrUzytkownika              =    ((Object[]) myEntries.get(i))[3];//
               Object NazwaUzytkownika           =    ((Object[]) myEntries.get(i))[4]; //
               Object DataTransakcji             =    ((Object[]) myEntries.get(i))[5]; //
               Object NazwaStacji                =    ((Object[]) myEntries.get(i))[6]; //
               Object NrProduktu                 =    ((Object[]) myEntries.get(i))[7]; //
               Object NazwaProduktu              =    ((Object[]) myEntries.get(i))[8]; //
               Object OrgBrutto                  =    ((Object[]) myEntries.get(i))[9]; //
               Object Ilosc                      =    ((Object[]) myEntries.get(i))[10]; //
               Object CenaJednostkowa            =    ((Object[]) myEntries.get(i))[11]; //
               Object CenaNetto                  =    ((Object[]) myEntries.get(i))[12]; //
               Object Vat                        =    ((Object[]) myEntries.get(i))[13]; //
               Object KwotaVat                   =    ((Object[]) myEntries.get(i))[14]; //
               Object CenaBrutto                 =    ((Object[]) myEntries.get(i))[15]; //
               Object NrTransakcji               =    ((Object[]) myEntries.get(i))[16]; //
               Object Przebieg                   =    ((Object[]) myEntries.get(i))[17]; //
               Object DodInfo                    =    ((Object[]) myEntries.get(i))[18]; //
               Object Dzial                      =    ((Object[]) myEntries.get(i))[19]; //
               Object CentrumKosztow             =    ((Object[]) myEntries.get(i))[20]; //
               Object Status                     =    "OK";
               
            Object[] dok = { NumerFaktury, Prefix, NrKlienta, NrUzytkownika, NazwaUzytkownika, DataTransakcji, NazwaStacji
                    , NrProduktu, NazwaProduktu, OrgBrutto, Ilosc, CenaJednostkowa, CenaNetto, Vat, KwotaVat, CenaBrutto
                    , NrTransakcji, Przebieg, DodInfo, Dzial, CentrumKosztow, null, Status};
            dokLst[i] = dok; 
            

            // wyswietlam
        Vector<String> tableHeaders = new Vector<String>();
        
        tableHeaders.add("NumerFaktury");
        tableHeaders.add("Prefix");
        tableHeaders.add("NrKlienta");
        tableHeaders.add("NrUzytkownika");
        tableHeaders.add("NazwaUzytkownika");
        tableHeaders.add("DataTransakcji");
        tableHeaders.add("NazwaStacji");
        tableHeaders.add("NrProduktu");
        tableHeaders.add("NazwaProduktu");
        tableHeaders.add("OrgBrutto");
        tableHeaders.add("Ilosc");
        tableHeaders.add("CenaJednostkowa");
        tableHeaders.add("CenaNetto");
        tableHeaders.add("Vat");
        tableHeaders.add("KwotaVat");
        tableHeaders.add("CenaBrutto");
        tableHeaders.add("NrTransakcji");
        tableHeaders.add("Przebieg");
        tableHeaders.add("DodInfo");
        tableHeaders.add("Dzial");
        tableHeaders.add("CentrumKosztow");
        tableHeaders.add("STATUS");
            
            tabelaCSV.setModel(new DefaultTableModel( ( Object[][]) dokLst, tableHeaders.toArray() ));
            tabelaCSV.setAutoCreateRowSorter(true);
        }             
                    //new JTable(myEntries.toArray()));
            
//            /String test = myEntries.get(1).toString();
            
            // tabelaDokumentow = myEntries.toArray();
        } catch (IOException ex) {
            Logger.getLogger(OknoRozchody.class.getName()).log(Level.SEVERE, null, ex);
        }
    }                                        

    private void butWgrajActionPerformed(java.awt.event.ActionEvent evt) {                                         
        try {
            String ret =  dbNap.wgrajFakturePaliwo(dokLst, cmbSpolki.getSelectedItem().toString(), labMiesiac.getText(), dokLst[0][0].toString(), cmbKontrahent.getSelectedItem().toString() );
            
            JOptionPane.showMessageDialog(panel, "Wgrałem fakturę paliwo w " + cmbSpolki.getSelectedItem().toString() + " Numer dok: " + ret, "Info",JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException ex) {
            Logger.getLogger(OknoFakturyPaliwo.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
    }                                        

    private void butSprawdzenieActionPerformed(java.awt.event.ActionEvent evt) {                                               
      
        String spr = "OK";
        
        if( dokLst == null )
        {
            spr = "Error";
            JOptionPane.showMessageDialog(panel, "Brak zaczytanego plik CSV");
        }
        else
        {
            String komunikat = "";
            Object[][] sprawdzenie = dbNap.sprawdzenePrzedWgraniemFakturyPaliwo(dokLst, labMiesiac.getText());
            
        
            for( Object[] p : sprawdzenie )
            {
                komunikat = komunikat + p[1] + p[2] + "0000" + p[3] + ' ' + p[21];
                    if ( !p[22].equals("OK") )
                    {
                       if (!p[22].equals("OK ale nie wgram pozycji, bez numer klienta"))
                        spr = "Error\n";
                    }  
                 
            }
            
            
           JFrame tt = new TT( komunikat );
         

           //JOptionPane.showMessageDialog(panel,"sdf");
        }
        
        
        
        if( spr.equals("OK") )
            butWgraj.setEnabled(true);
        
    }                                              

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OknoFakturyPaliwo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OknoFakturyPaliwo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OknoFakturyPaliwo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OknoFakturyPaliwo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OknoFakturyPaliwo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton butSprawdzenie;
    private javax.swing.JButton butWgraj;
    private javax.swing.JComboBox cmbKontrahent;
    private javax.swing.JComboBox cmbSpolki;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labIloscWierszyCSV;
    private javax.swing.JTextField labMiesiac;
    private javax.swing.JTable tabelaCSV;
    // End of variables declaration                   
}
